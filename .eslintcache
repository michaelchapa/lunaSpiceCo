[{"C:\\development\\react\\luna-spice\\src\\index.js":"1","C:\\development\\react\\luna-spice\\src\\App.js":"2","C:\\development\\react\\luna-spice\\src\\reportWebVitals.js":"3","C:\\development\\react\\luna-spice\\src\\components\\Cart.js":"4","C:\\development\\react\\luna-spice\\src\\components\\Navigation.js":"5","C:\\development\\react\\luna-spice\\src\\components\\Homepage.js":"6","C:\\development\\react\\luna-spice\\src\\components\\Checkout.js":"7","C:\\development\\react\\luna-spice\\src\\components\\ProductList.js":"8","C:\\development\\react\\luna-spice\\src\\components\\Product.js":"9","C:\\development\\react\\luna-spice\\src\\components\\CartContext.js":"10","C:\\development\\react\\luna-spice\\src\\components\\ShippingForm.js":"11","C:\\development\\react\\luna-spice\\src\\components\\About.js":"12","C:\\development\\react\\luna-spice\\src\\components\\Styles.js":"13"},{"size":517,"mtime":1609644966826,"results":"14","hashOfConfig":"15"},{"size":986,"mtime":1610081532156,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1609644966827,"results":"17","hashOfConfig":"15"},{"size":576,"mtime":1610147276785,"results":"18","hashOfConfig":"15"},{"size":749,"mtime":1610081532160,"results":"19","hashOfConfig":"15"},{"size":194,"mtime":1609726664181,"results":"20","hashOfConfig":"15"},{"size":908,"mtime":1610148293599,"results":"21","hashOfConfig":"15"},{"size":493,"mtime":1610081532162,"results":"22","hashOfConfig":"15"},{"size":1833,"mtime":1610148225431,"results":"23","hashOfConfig":"15"},{"size":1314,"mtime":1610147951714,"results":"24","hashOfConfig":"15"},{"size":4955,"mtime":1610148396223,"results":"25","hashOfConfig":"15"},{"size":156,"mtime":1610081532157,"results":"26","hashOfConfig":"15"},{"size":541,"mtime":1610081532163,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qdecye",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\development\\react\\luna-spice\\src\\index.js",[],["61","62"],"C:\\development\\react\\luna-spice\\src\\App.js",[],"C:\\development\\react\\luna-spice\\src\\reportWebVitals.js",[],"C:\\development\\react\\luna-spice\\src\\components\\Cart.js",[],"C:\\development\\react\\luna-spice\\src\\components\\Navigation.js",["63","64"],"import React, {useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CartContext } from './CartContext';\r\nimport { Spring } from 'react-spring/renderprops';\r\n// import {useSpring, animated} from 'react-spring';\r\n\r\nexport default function Navigation() {\r\n    // eslint-disable-next-line\r\n    const [cart, setCart, totalPrice, itemsInCart] = useContext(CartContext);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Luna Spice Co</h1>\r\n            <Link to = \"/\">Home</Link>\r\n            <Link to = \"/about\">About</Link>\r\n            <Link to = \"/cart\">Cart</Link>\r\n            <span>{itemsInCart}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HeaderStyle = {\r\n    border: '#7FFF00',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n}\r\n","C:\\development\\react\\luna-spice\\src\\components\\Homepage.js",[],"C:\\development\\react\\luna-spice\\src\\components\\Checkout.js",["65","66","67"],"import React, {useContext} from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport ShippingForm from './ShippingForm'\r\nimport { CartContext } from './CartContext'\r\n\r\n\r\nfunction Checkout({ history }) {\r\n    const [cart, setCart, totalPrice, itemsInCart, cartContents] = useContext(CartContext);\r\n\r\n    function goto(step) { \r\n        if(step === 0) {\r\n            history.push('/cart');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Checkout</h1>\r\n            {cartContents}\r\n            <span>Total: ${totalPrice}</span>\r\n            <ShippingForm />\r\n            <p>3. Calculate Shipping</p>\r\n            <p>4. Collect Payment Information</p>\r\n            <p>5. SUBMISSION :O</p>\r\n            <button onClick = {() => goto(0)}>Edit Cart</button>\r\n            <input type = \"submit\" value = \"Complete Order\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Checkout);","C:\\development\\react\\luna-spice\\src\\components\\ProductList.js",[],"C:\\development\\react\\luna-spice\\src\\components\\Product.js",["68"],"import React, { useContext } from 'react';\r\nimport { CartContext } from './CartContext';\r\nimport { useSpring, animated } from 'react-spring'; \r\n\r\nexport const Product = (props) => {\r\n    const [cart, setCart] = useContext(CartContext);\r\n    const springStyle = useSpring({\r\n        opacity: 1, from: {opacity: 0}\r\n    });\r\n\r\n    const subQuantity = () => {\r\n        if(cart[props.id - 1].quantity <= 0)\r\n            return\r\n\r\n        setCart(cart.map((product) => {\r\n            if(product.id === props.id){\r\n                return {'id': product.id, 'name': product.name, \r\n                        'price': product.price, 'quantity': product.quantity - 1, \r\n                        'image': product.image};\r\n            }\r\n            return product;\r\n        }));\r\n    }\r\n\r\n    const addQuantity = () => {\r\n        setCart(cart.map((product) => {\r\n            if(product.id === props.id){\r\n                return {'id': product.id, 'name': product.name, \r\n                        'price': product.price, 'quantity': product.quantity + 1, \r\n                        'image': product.image};\r\n            }\r\n            return product;\r\n        }));\r\n    }\r\n\r\n    const addToCart = () => {\r\n        console.log('TODO: Product.addToCart')\r\n    }\r\n\r\n    return(\r\n        <animated.div style = {springStyle}>\r\n            <h2>{props.name}</h2>\r\n            <h3>{props.price}</h3>\r\n            <img style = {{width: \"40%\", height: \"auto\", margin: \"auto\"}} src = {cart[props.id - 1].image} />\r\n            <button className = \"quantity-button\" onClick = {subQuantity}>-</button>\r\n            <span>{cart[props.id - 1].quantity}</span>\r\n            <button className = \"quantity-button\" onClick = {addQuantity}>+</button>\r\n            <button onClick = {addToCart}>Add to Cart</button>\r\n            <hr />\r\n        </animated.div>\r\n    )\r\n}","C:\\development\\react\\luna-spice\\src\\components\\CartContext.js",["69"],"import React from 'react';\r\nimport photo1 from '../hotCheetos.jpeg';\r\nimport photo2 from '../spiceMix2.png';\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nexport const CartProvider = (props) => {\r\n    const [cart, setCart] = React.useState([\r\n        {id: 1, name: \"Spice Mix A\", price: 13.99, quantity: 0, image: photo1}, \r\n        {id: 2, name: \"Spice Mix C\", price: 10.99, id: 2, quantity: 0, image: photo2}\r\n    ]);\r\n\r\n    const totalPrice = cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0).toFixed(2);\r\n    const itemsInCart = cart.reduce((acc, curr) => acc + curr.quantity, 0);\r\n\r\n    const cartContents = \r\n    <table style = {{margin: \"auto\"}}>\r\n        <thead>\r\n            <tr>\r\n                <th>Spice</th><th>Price</th><th>Qty</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        {cart.map(item => {\r\n            return (\r\n                <tr key = {item.id}>\r\n                    <th>{item.name}</th>\r\n                    <td>{item.price}</td>\r\n                    <td>{item.quantity}</td>\r\n                </tr>\r\n            )\r\n        })}\r\n        </tbody>\r\n    </table>;\r\n\r\n    return (\r\n        <CartContext.Provider value = {[cart, setCart, totalPrice, itemsInCart, cartContents]}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}","C:\\development\\react\\luna-spice\\src\\components\\ShippingForm.js",["70","71","72","73"],"import React from 'react';\r\nimport { Formik, useField, Form} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Styles } from './Styles';\r\n\r\nconst CustomTextInput = ({label, ...props}) => {\r\n    const [field, meta, helpers] = useField(props);\r\n    return (\r\n        <>\r\n        <label htmlFor = {props.id || props.name}>{label}</label>\r\n            <input className = \"shipping-text-input\" {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className = \"error\">{meta.error}</div>\r\n            ): null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst CustomCheckbox = ({children, ...props}) => {\r\n    const [field, meta, helpers] = useField(props, 'checkbox');\r\n    return (\r\n        <>\r\n        <label className = \"checkbox\">\r\n            <input type = \"checkbox\" {...field} {...props} />\r\n            {children}\r\n        </label>\r\n        {meta.touched && meta.error ? (\r\n            <div className = \"error\">{meta.error}</div>\r\n        ): null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst CustomSelect = ({label, ...props}) => {\r\n    const [field, meta, helpers] = useField(props);\r\n    return (\r\n        <>\r\n        <label htmlFor = {props.id || props.name}>{label}</label>\r\n            <select className = \"shipping-select-input\" {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className = \"error\">{meta.error}</div>\r\n            ): null}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ShippingForm() {\r\n    return (\r\n        <Styles>\r\n            <Formik\r\n                initialValues = {{\r\n                    name: '',\r\n                    email: '',\r\n                    address1: '', \r\n                    address2: '',\r\n                    city: '',\r\n                    state: '',\r\n                    zipcode: '', \r\n                    acceptedTerms: '',\r\n                }}\r\n\r\n                validationSchema = {Yup.object({\r\n                    name: Yup.string()\r\n                        .min(2, 'Must be at least 2 characters')\r\n                        .max(13, 'Must be less than 13 characters')\r\n                        .required('Required'),\r\n                    email: Yup.string()\r\n                        .email('Invalid email address')\r\n                        .required('Required'),\r\n                    address1: Yup.string()\r\n                        .min(2, 'Must be at least 2 characters')\r\n                        .max(35, 'Must be less than 35 characters')\r\n                        .required('Required'),\r\n                    address2: Yup.string()\r\n                        .min(2, 'Must be at least 2 characters')\r\n                        .max(35, 'Must be less than 35 characters'),\r\n                    city: Yup.string()\r\n                        .min(2, 'Must be at least 2 characters')\r\n                        .max(35, 'Must be less than 35 characters')\r\n                        .required('Required'),\r\n                    state: Yup.string()\r\n                        .min(2, 'Must be at least 2 characters')\r\n                        .max(35, 'Must be less than 35 characters')\r\n                        .required('Required'),\r\n                    zipcode: Yup.number()\r\n                        .min(5, 'Must be 5 digits')\r\n                        .required('Required'),\r\n                    acceptedTerms: Yup.boolean()\r\n                        .oneOf([true], 'You must accept the Terms & Conditions')\r\n                        .required('Required')\r\n                })}\r\n\r\n                onSubmit={(values, { setSubmitting, resetForm}) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        resetForm();\r\n                        setSubmitting(false);\r\n                    }, 3000)\r\n                }}\r\n            >\r\n                {props => (\r\n                    <Form>\r\n                        <h1>Shipping</h1>\r\n                        <CustomTextInput label = \"Name\" name = \"name\" type = \"text\" />\r\n                        <CustomTextInput label = \"Email\" name = \"email\" type = \"email\" />\r\n                        <CustomTextInput label = \"Address 1\" name = \"address1\" type = \"text\" />\r\n                        <CustomTextInput label = \"Adddress 2\" name = \"address2\" type = \"text\" />\r\n                        <CustomTextInput label = \"City\" name = \"city\" type = \"text\" />\r\n                        <CustomTextInput label = \"State\" name = \"state\" type = \"text\" />\r\n                        <CustomTextInput label = \"Zipcode\" name = \"zipcode\" type = \"text\" />\r\n                        <CustomCheckbox name = \"acceptedTerms\">\r\n                            I accept the Terms and Conditions\r\n                        </CustomCheckbox>\r\n                        <button type = \"submit\">{props.isSubmitting ? 'Calculating...' : 'Calculate Shipping'}</button>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nexport default ShippingForm\r\n","C:\\development\\react\\luna-spice\\src\\components\\About.js",[],"C:\\development\\react\\luna-spice\\src\\components\\Styles.js",[],["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":22,"column":7,"nodeType":"82","messageId":"83","endLine":22,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":8,"column":12,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":8,"column":18,"nodeType":"82","messageId":"83","endLine":8,"endColumn":25},{"ruleId":"80","severity":1,"message":"87","line":8,"column":39,"nodeType":"82","messageId":"83","endLine":8,"endColumn":50},{"ruleId":"88","severity":1,"message":"89","line":44,"column":13,"nodeType":"90","endLine":44,"endColumn":110},{"ruleId":"91","severity":1,"message":"92","line":10,"column":52,"nodeType":"93","messageId":"94","endLine":10,"endColumn":54},{"ruleId":"80","severity":1,"message":"95","line":7,"column":25,"nodeType":"82","messageId":"83","endLine":7,"endColumn":32},{"ruleId":"80","severity":1,"message":"95","line":20,"column":25,"nodeType":"82","messageId":"83","endLine":20,"endColumn":32},{"ruleId":"80","severity":1,"message":"96","line":34,"column":7,"nodeType":"82","messageId":"83","endLine":34,"endColumn":19},{"ruleId":"80","severity":1,"message":"95","line":35,"column":25,"nodeType":"82","messageId":"83","endLine":35,"endColumn":32},{"ruleId":"76","replacedBy":"97"},{"ruleId":"78","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Spring' is defined but never used.","Identifier","unusedVar","'HeaderStyle' is assigned a value but never used.","'cart' is assigned a value but never used.","'setCart' is assigned a value but never used.","'itemsInCart' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'id'.","ObjectExpression","unexpected","'helpers' is assigned a value but never used.","'CustomSelect' is assigned a value but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation"]